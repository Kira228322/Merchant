TODO Локальные задачи:


Как должно происходить сохранение:
Всё, что необходимо сохранять/загружать должно иметь методы SaveData LoadData.
Где-то можно сделать отдельный статический компонент/метод SaveLoadSystem, который будет вызывать у соответствующих элементов эти методы.
В методах сохранения они должны передавать сериализуемые параметры в SaveLoadSystem, а SaveLoadSystem уже запишет их в файл через бинарный форматтер.
Наоборот в методах загрузки - бинарный форматтер десериализует, SaveLoadSystem отправит обратно и вызовет методы загрузки

To use field serialization you must ensure that the field:

Is public, or has a SerializeField attribute
isn’t static
isn’t const
isn’t readonly
Has a field type that can be serialized:
Primitive data types (int, float, double, bool, string, etc.)
Enum types (32 bites or smaller)
Fixed-size buffers
Unity built-in types, for example, Vector2, Vector3, Rect, Matrix4x4, Color, AnimationCurve
Custom structs with the Serializable attribute
References to objects that derive from UnityEngine.Object
Custom classes with the Serializable attribute.
An array of a field type mentioned above
A List<T> of a field type mentioned above
Note: Unity doesn’t support serialization of multilevel types (multidimensional arrays, jagged arrays, dictionaries, and nested container types). If you want to serialize these, you have two options:

Wrap the nested type in a class or struct
Use serialization callbacks, by implementing ISerializationCallbackReceiver, to perform custom serialization.

Насчёт сериализации инвентаря: Мы хотим запомнить состояние сетки инвентаря. Для этого два способа:
1) Запомнить состояние сетки, т.е List<InventoryItem[]> _storedInventoryItems

InventoryItem[] можно завернуть в CustomClass InventoryRow

2) Запомнить только PlayersInventory, он содержит ссылки на все вещи. При загрузке использовать PlaceItem на конкретные координаты
Проблема - в InventoryItem не отслеживается, куда он был поставлен. Поэтому пока что выбрал первый способ.


NPC - сделать ивенты на поговорить. Подумать, можно ли как-то совместить с Ink, например чтобы давал особый диалог если активен квест. 
Подписывать TalkToNPCGoal на этот ивент.

Сделать правильный ресайз FunctionalWindow и её кнопок

Ресайз плашки QuestPanel при необходимости -- неприоритетно, хуёвый дизайн и что

Текущие баги:

Оказывается, выключенные объекты не выполняют свой Awake (Даже в официальной документации сказано по другому)
Баг заключается в том, что нужно открыть инвентарь перед тем как с ним работать. Проблема раньше не появлялась, потому что
например при покупке TradeManager всегда открывал окно покупки и окно инвентаря => инициализировал его.
Проблема появилась при работе с WagonUpgrader, он не видит инвентаря если тот не был открыт, а ему он нужен чтобы расширить количество слотов
С великой вероятностью такой ситуации никогда не будет в игре: игрок скорее всего откроет инвентарь 1 раз до того, как увидит нашего Xzibita
Но что если не откроет? А что если сохранится прямо возле него и перезагрузит игру, деинициализировав инвентарь?
В общем, на данный момент, нужно открыть и закрыть инвентарь чтобы всё стало хорошо работать. В будущем буду изучать проблему, искать что я упустил.


Какие то баги, если добавлены одинаковые квесты. (Зачем добавлять одинаковые квесты? однако стоит изучить проблему)

Input.MouseButtonUp(int button) не работает правильно (никак не работает) для андроида. В интернете советуют использовать
Touch.phase == TouchPhase.ended, но было как-то всё равно безуспешно.

Слайдер гниения у повернутых предметов находится немного ниже, чем у неповернутых. Перфекционистов будет раздражать.
Тут вопрос лишь в том, будут ли в игре предметы, которые гниют и при том не квадратные (ну хлеб например наверное сюда подходит)



TODO Общие задачи:

- Изучить, как правильно реализовывать экономику в игре

Общие идеи:

+Механика заказов (например есть гильдия лучников, они могут раз в неделю сделать заказ на стрелы и тд...) 

Доска объявлений

Отношения меж персонажами

Живой мир, меняющийся и без игрока

+Издержки на поддержание в рабочем состоянии

+Ивенты в дороге

+Оптимальность маршрута (безопасность, качество, время БКВ)

+Прокачка персонажа за экспу

+Динамическая смена дня и ночи

Апгрейд оборудования 
(
колеса - апают качество дороги
подвеска - увеличивает предельный вес, который можно везти
кузов - увеличивает количетсво слотов
)

+Квесты персонажей

Обмен сведениями (ивент или знакомство)

+Больше статов (удача, дипломатия)

Разные расходники кроме еды (tps)


История персонажа: Батя умер, оставил важный заказ => пездюк стал торговцем
