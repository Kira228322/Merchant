TODO Локальные задачи:

Шаблоны проверок в диалоге:

I) У этого нпс есть активный квест
	~temp activeQuests = get_activeQuestList()
	{contains(activeQuests, "questName"):}
	а) Нпс что-то рассказывает по квесту
		-> рассказывает
	б) Нпс ждёт от тебя что-то
		-> ждёт

II) Более одного активного квеста

~temp activeQuests = get_activeQuestList()
	{contains(activeQuests, "quest1"):
		-> quest1
	}
	{contains(activeQuests, "questN"):
		-> questN
	}
	-else:
		->generic

III) Нет активного квеста
	а) Все квесты уже выполнены
		{check_if_quest_has_been_taken("lastQuest"):
			-> afterwords
		}
		-else:
			-> generic
	б) Есть следующий квест, не связанный с этим нпс
		{contains(activeQuests, "unrelatedQuest"):
			-> попутного_вiтра_тобi_в_сраку
		}
		-else:
			->generic

			
Нужны творческие названия для всех цепочек квестов. Игра похожа на ведьмака потому что

Выдавать игроку предупреждение если нет интернета при взятии объявления рекламы

Лаура должна упоминать Селену как знакомую стражу
Сокол должен упоминать Охотников за Реликвиями как работодателей бандитов
Сокол должен упоминать своего дружбана и сказать, чтобы он уходил от бандитов
Ричард имеет неудобный диалог
Если реликвия у ричарда не куплена, то Томас начинает диалог заново
В alberic_bringrelic нет вступления??
"Вернуться к Лауре с хорошими новостями" новости не хорошие
Министерство экономики должно иметь табличку о Рабочих часах. (Пропадающую и возникающую.)
Клерк из министерства должна исчезнуть после её квестов

Scene7 там есть река, планируется сделать нпс с квестом на постройку моста. Надо сделать все там, как планировалось:
пока нет моста нужны коллайдеры, которые не будут пускать в реку. 
когда будет мост - должен быть мост.

Цепочка квестов 1. Закрыть todo связанный с id названиями и тд.

Для Scene7 сделать нпс, который будет строить мост. ПОКА МОСТА НЕТ нужно поставить невидимые коллайдеры с лейером ground чтобы нпс не падали, да и игрок тоже. Потом их убирать и ставить мост

1) Квесты: мейн сюжетки, 
   Квест по "выбрать кому отдать предмет", 
   Квест по передаче предметов между мурлоками
   Квест "Что в чёрном ящике"
   Квест "Насколько ты хорошо знаешь лор игры". Если не знаешь, будешь отпижжен
3) Ивенты в дороге: храм, микроостановка (накормили в дороге)

Поставить мост на сцену7

Проверить, что CraftingPanel проверяет, можно ли положить предмет после крафта (forcedPlacement будет false для неё)
Проверил, она конечно проверяет, но если пытаться крафтить с полным инвентарем то всегда не позволяет. Даже если предметы удалятся и место появится.

Норм шрифт с аутлайном??

Квест: сбор налогов с челиков в деревне

Потом добавить все туториал-презентации

Подумать над статусами и тем что их накладывает (зелья, книжки)

Сделать максимальный уровень для навыка Крафтинг - в момент когда будет известен максимальный уровень крафтрецепта

Крутой ивент: праздник. Для некоторых деревень сделать дубликат-праздничную локацию. Когда приезжаешь на локацию, узнаешь что там праздник.

Квест на принести тухлые вещи челу

Квест на починку моста (вопрос только, что этот мост должен открывать для игрока?..)

Осталось:

Разобраться с Excel: предметы, которые не должны прибавляться

Больше ивентов в дороге, по хорошему их надо около 15 хотя бы 

Общие идеи:

+Механика заказов (например есть гильдия лучников, они могут раз в неделю сделать заказ на стрелы и тд...) 

+Доска объявлений

+Живой мир, меняющийся и без игрока

+Издержки на поддержание в рабочем состоянии

+Ивенты в дороге

+Оптимальность маршрута (безопасность, качество, время БКВ)

+Прокачка персонажа за экспу

+Динамическая смена дня и ночи

+Апгрейд оборудования 
	(
	колеса - апают качество дороги
	подвеска - увеличивает предельный вес, который можно везти
	кузов - увеличивает количетсво слотов
	)

+Квесты персонажей

+Больше статов (удача, дипломатия)

+Разные расходники кроме еды (tps)


Полезности:
https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md
https://github.com/inkle/ink/blob/master/Documentation/RunningYourInk.md
https://docs.unity3d.com/Manual/script-Serialization.html - хелпа по сериализации типов (что можно и нельзя сохранить)